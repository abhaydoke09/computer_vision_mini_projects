{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue255;\red34\green139\blue34;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs20 \cf2 function\cf0  [inliers, transf] = ransac(matches, c1, c2, method)
\fs24 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf3 % This code is part of:
\fs24 \cf0 \

\fs20 \cf3 %
\fs24 \cf0 \

\fs20 \cf3 %   CMPSCI 670: Computer Vision, Fall 2016
\fs24 \cf0 \

\fs20 \cf3 %   University of Massachusetts, Amherst
\fs24 \cf0 \

\fs20 \cf3 %   Instructor: Subhransu Maji
\fs24 \cf0 \

\fs20 \cf3 %
\fs24 \cf0 \

\fs20 \cf3 %   Mini project 3
\fs24 \cf0 \

\fs20 \cf3  
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf0 [I] = find(matches>0);
\fs24 \

\fs20 matches_new = matches(I);
\fs24 \

\fs20 c1_new = c1(I,:);
\fs24 \

\fs20 c2_new = c2(matches_new,:);
\fs24 \

\fs20  
\fs24 \

\fs20 max_inliers_count = 0;
\fs24 \

\fs20 best_transformation = zeros(2,3);
\fs24 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf2 for\cf0  iterations = 1:3000
\fs24 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf0     n = 3;
\fs24 \

\fs20     msize = numel(matches_new);
\fs24 \

\fs20     random_indices = randperm(msize, n);
\fs24 \

\fs20     X = ones(3,3);
\fs24 \

\fs20     X(1,1) = c2(matches_new(random_indices(1)),1);
\fs24 \

\fs20     X(2,1) = c2(matches_new(random_indices(1)),2);
\fs24 \

\fs20     X(1,2) = c2(matches_new(random_indices(2)),1);
\fs24 \

\fs20     X(2,2) = c2(matches_new(random_indices(2)),2);
\fs24 \

\fs20     X(1,3) = c2(matches_new(random_indices(3)),1);
\fs24 \

\fs20     X(2,3) = c2(matches_new(random_indices(3)),2);
\fs24 \

\fs20     
\fs24 \

\fs20     x_prime = zeros(2,3);
\fs24 \

\fs20     x_prime(1,1) = c1(random_indices(1),1);
\fs24 \

\fs20     x_prime(2,1) = c1(random_indices(1),2);
\fs24 \

\fs20     x_prime(1,2) = c1(random_indices(2),1);
\fs24 \

\fs20     x_prime(2,2) = c1(random_indices(2),2);
\fs24 \

\fs20     x_prime(1,3) = c1(random_indices(3),1);
\fs24 \

\fs20     x_prime(2,3) = c1(random_indices(3),2);
\fs24 \

\fs20     
\fs24 \

\fs20     \cf3 %disp(size(X));
\fs24 \cf0 \

\fs20     \cf3 %disp(size(x_prime));
\fs24 \cf0 \

\fs20     affine_transformation = x_prime / X;
\fs24 \

\fs20     
\fs24 \

\fs20     m = affine_transformation(1:2,1:2);
\fs24 \

\fs20     t = affine_transformation(1:2,3);
\fs24 \

\fs20     
\fs24 \

\fs20     transformed_c1 = (m * c2(matches_new,1:2)' + t)';
\fs24 \

\fs20     original_c1 = c1_new(:,1:2);
\fs24 \

\fs20     
\fs24 \

\fs20     \cf3 %disp(size(transformed_c2));
\fs24 \cf0 \

\fs20     \cf3 %disp(size(original_c2));
\fs24 \cf0 \

\fs20     points_count = size(original_c1,1);
\fs24 \

\fs20     inliers_count = 0;
\fs24 \

\fs20     \cf2 for\cf0  i = 1:points_count
\fs24 \

\fs20         distance = sqrt((transformed_c1(i,:) - original_c1(i,:)).^2);
\fs24 \

\fs20         \cf2 if\cf0  distance < 5
\fs24 \

\fs20             inliers_count = inliers_count+1;
\fs24 \

\fs20         \cf2 end
\fs24 \cf0 \

\fs20     \cf2 end
\fs24 \cf0 \

\fs20     \cf2 if\cf0  inliers_count > max_inliers_count
\fs24 \

\fs20         max_inliers_count = inliers_count;
\fs24 \

\fs20         best_transformation = affine_transformation;
\fs24 \

\fs20     \cf2 end
\fs24 \cf0 \

\fs20     
\fs24 \

\fs20     
\fs24 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf3 % ********************************************************* %
\fs24 \cf0 \

\fs20 \cf3 %     X(1,1) = c1_new(random_indices(1),1);
\fs24 \cf0 \

\fs20 \cf3 %     X(2,1) = c1_new(random_indices(1),2);
\fs24 \cf0 \

\fs20 \cf3 %     X(1,2) = c1_new(random_indices(2),1);
\fs24 \cf0 \

\fs20 \cf3 %     X(2,2) = c1_new(random_indices(2),2);
\fs24 \cf0 \

\fs20 \cf3 %     X(1,3) = c1_new(random_indices(3),1);
\fs24 \cf0 \

\fs20 \cf3 %     X(2,3) = c1_new(random_indices(3),2);
\fs24 \cf0 \

\fs20 \cf3 %     
\fs24 \cf0 \

\fs20 \cf3 %     c2(matches_new(random_indices(1)),:);
\fs24 \cf0 \

\fs20 \cf3 %     c2(matches_new(random_indices(1)),2);
\fs24 \cf0 \

\fs20 \cf3 %     x_prime = zeros(2,3);
\fs24 \cf0 \

\fs20 \cf3 %     x_prime(1,1) = c2(matches_new(random_indices(1)),1);
\fs24 \cf0 \

\fs20 \cf3 %     x_prime(2,1) = c2(matches_new(random_indices(1)),2);
\fs24 \cf0 \

\fs20 \cf3 %     x_prime(1,2) = c2(matches_new(random_indices(2)),1);
\fs24 \cf0 \

\fs20 \cf3 %     x_prime(2,2) = c2(matches_new(random_indices(2)),2);
\fs24 \cf0 \

\fs20 \cf3 %     x_prime(1,3) = c2(matches_new(random_indices(3)),1);
\fs24 \cf0 \

\fs20 \cf3 %     x_prime(2,3) = c2(matches_new(random_indices(3)),2);
\fs24 \cf0 \

\fs20 \cf3 %     
\fs24 \cf0 \

\fs20 \cf3 %     affine_transformation = x_prime / X;
\fs24 \cf0 \

\fs20 \cf3 %     
\fs24 \cf0 \

\fs20 \cf3 %     m = affine_transformation(1:2,1:2);
\fs24 \cf0 \

\fs20 \cf3 %     t = affine_transformation(1:2,3);
\fs24 \cf0 \

\fs20 \cf3 %     
\fs24 \cf0 \

\fs20 \cf3 %     transformed_c2 = (m * c1_new(:,1:2)' + t)';
\fs24 \cf0 \

\fs20 \cf3 %     original_c2 = c2_new(:,1:2);
\fs24 \cf0 \

\fs20 \cf3 %     
\fs24 \cf0 \

\fs20 \cf3 %     %disp(size(transformed_c2));
\fs24 \cf0 \

\fs20 \cf3 %     %disp(size(original_c2));
\fs24 \cf0 \

\fs20 \cf3 %     points_count = size(original_c2,1);
\fs24 \cf0 \

\fs20 \cf3 %     inliers_count = 0;
\fs24 \cf0 \

\fs20 \cf3 %     for i = 1:points_count
\fs24 \cf0 \

\fs20 \cf3 %         distance = sqrt((transformed_c2(i,:) - original_c2(i,:)).^2);
\fs24 \cf0 \

\fs20 \cf3 %         if distance < 4
\fs24 \cf0 \

\fs20 \cf3 %             inliers_count = inliers_count+1;
\fs24 \cf0 \

\fs20 \cf3 %         end
\fs24 \cf0 \

\fs20 \cf3 %     end
\fs24 \cf0 \

\fs20 \cf3 %     if inliers_count > max_inliers_count
\fs24 \cf0 \

\fs20 \cf3 %         max_inliers_count = inliers_count;
\fs24 \cf0 \

\fs20 \cf3 %         best_transformation = affine_transformation;
\fs24 \cf0 \

\fs20 \cf3 %     end
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf2 end
\fs24 \cf0 \

\fs20 \cf2  
\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf0 disp(max_inliers_count);
\fs24 \

\fs20 disp(best_transformation);
\fs24 \

\fs20 transf = best_transformation;
\fs24 \

\fs20  
\fs24 \
\pard\pardeftab720\partightenfactor0

\fs20 \cf3 % n = 3;
\fs24 \cf0 \

\fs20 \cf3 % disp(size(matches_new));
\fs24 \cf0 \

\fs20 \cf3 % disp(size(c1_new));
\fs24 \cf0 \

\fs20 \cf3 % disp(size(c2_new));
\fs24 \cf0 \

\fs20 \cf3 % 
\fs24 \cf0 \

\fs20 \cf3 % 
\fs24 \cf0 \

\fs20 \cf3 % for iterations  = 1:1000
\fs24 \cf0 \

\fs20 \cf3 %     n = 3;
\fs24 \cf0 \

\fs20 \cf3 %     msize = numel(matches_new);
\fs24 \cf0 \

\fs20 \cf3 %     random_indices = randperm(msize, n);
\fs24 \cf0 \

\fs20 \cf3 %     X = zeros(2*n,6);
\fs24 \cf0 \

\fs20 \cf3 %     x_prime = zeros(2*n,1);
\fs24 \cf0 \

\fs20 \cf3 %     row_counter = 1;
\fs24 \cf0 \

\fs20 \cf3 %     for i =1:n
\fs24 \cf0 \

\fs20 \cf3 %         X(row_counter,1) = c2_new(random_indices(i),1);
\fs24 \cf0 \

\fs20 \cf3 %         X(row_counter,2) = c2_new(random_indices(i),2);
\fs24 \cf0 \

\fs20 \cf3 %         X(row_counter,3) = 1;
\fs24 \cf0 \

\fs20 \cf3 %         x_prime(row_counter) = c1_new(random_indices(i),1);
\fs24 \cf0 \

\fs20 \cf3 %         row_counter = row_counter+1;
\fs24 \cf0 \

\fs20 \cf3 %         X(row_counter,4) = c2_new(random_indices(i),1);
\fs24 \cf0 \

\fs20 \cf3 %         X(row_counter,5) = c2_new(random_indices(i),2);
\fs24 \cf0 \

\fs20 \cf3 %         X(row_counter,6) = 1;
\fs24 \cf0 \

\fs20 \cf3 %         x_prime(row_counter) = c2_new(random_indices(i),2);
\fs24 \cf0 \

\fs20 \cf3 %         row_counter = row_counter+1;
\fs24 \cf0 \

\fs20 \cf3 %     end
\fs24 \cf0 \

\fs20 \cf3 % 
\fs24 \cf0 \

\fs20 \cf3 %     %disp(size(X));
\fs24 \cf0 \

\fs20 \cf3 %     %disp(size(x_prime));
\fs24 \cf0 \

\fs20 \cf3 % 
\fs24 \cf0 \

\fs20 \cf3 %     x_prime \\ X
\fs24 \cf0 \

\fs20 \cf3 % end
\fs24 \cf0 \

\fs20 \cf3  
\fs24 \cf0 \

\fs20 \cf3  
\fs24 \cf0 \

\fs20 \cf3  
\fs24 \cf0 \

\fs20 \cf3 % X = [c1(1,1) c1(1,2) 0 0 1 0;0 0 c1(1,1) c1(1,2) 0 1;...
\fs24 \cf0 \

\fs20 \cf3 %     c1(3,1) c1(3,2) 0 0 1 0;0 0 c1(3,1) c1(3,2) 0 1;...
\fs24 \cf0 \

\fs20 \cf3 %     c1(6,1) c1(6,2) 0 0 1 0;0 0 c1(6,1) c1(6,2) 0 1;...
\fs24 \cf0 \

\fs20 \cf3 %     ];
\fs24 \cf0 \

\fs20 \cf3 % x_prime = [c2(matches(1),1);c2(matches(1),2);c2(matches(3),1);c2(matches(3),2);...
\fs24 \cf0 \

\fs20 \cf3 %            c2(matches(6),1);c2(matches(6),2)] ;
\fs24 \cf0 \

\fs20 \cf3  
\fs24 \cf0 \

\fs20 \cf3  
\fs24 \cf0 \

\fs20 \cf3  
\fs24 \cf0 \

\fs20 \cf3  
\fs24 \cf0 \
\
}